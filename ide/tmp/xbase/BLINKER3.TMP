.* ----------------------------------------------------------------------------
.* TEMPLATE     : BLINKER3
.* RELEASE      : 4.1
.* VERSION      :
.* DESCRIZIONE  : Script per l'operazione di Link con Blinkerø 3.0 Protect mode
.* ----------------------------------------------------------------------------
.tExeBuild()
.do GenUsrM
.M->MstObjRec := oo_obj->(recno())
.out ÛtSourcePath()+"\"+alltrim(oo_obj->PRG)+"."+oo_obj->EXTÛ
.msg [GENERA :]+trim(oo_obj->ObjDes)+[ : ]+tSourcePath()+"\"+alltrim(oo_obj->prg)+[.]+oo_obj->EXT

#  ZONA COMANDI BLINKER
.if (toExeEnv("compiler")=="3")
BLINKER LINK        VERSION  5.0
.if !(toExeEnv("linkercom")=="0")
BLINKER EXECUTABLE  COMPRESS ÛtoExeEnv("linkercom")Û
.endif
.else
.if toExeEnv("linkercom")=="0"
BLINKER LINK        VERSION  3.3
.else
BLINKER LINK        VERSION  4.1
BLINKER EXECUTABLE  COMPRESS ÛtoExeEnv("linkercom")Û
.endif
BLINKER EXECUTABLE  CLIPPER  F100;R20
BLINKER OVERLAY     OPSIZE    0
BLINKER PROCEDURE   DEPTH    60
BLINKER EXECUTABLE  EXTEND
# Enable this switch if program dont' start
#BLINKER HOST        PASSUP   OFF
.endif
BLINKER INCREMENTAL OFF
BLINKER EXECUTABLE  NODELETE
NOBELL

.inj LNK2 Dopo la zona comandi standard file script per BLINKER

.M->cTOut := toExeEnv("outputexe")
OUTPUT Ûif( empty(cTout),"..\EXE\",cTout+"\")+ALLTRIM(oo_exe->ExeName)Û

.M->cTini := tInitProc()
ÛTgetCom("fi")+" "+cTiniÛ

.if (toExeEnv("compiler")=="3")
# Startup config
ÛTgetCom("fi")+" _"+cTiniÛ
.endif

# Libreria di blinker 3 per clipper 5.2
.if toExeEnv("compiler")=="1"
SEARCH blxClp52.lib
SEARCH blxmsc51.lib
.endif
.if toExeEnv("compiler")=="2"
SEARCH blxClp53.lib
SEARCH blxmvc10.lib
.endif
.if !(toExeEnv("compiler")=="3")
LIB    blxRatex.lib
.endif

#  FILE SPECIALI
.foreach link oo_bld->typ=="spc" .and. oo_bld->wdo=="prg" .and. oo_bld->SECTION=="0"
ÛTgetCom("fi")+" "+alltrim(oo_obj->PRG)Û
.next

#  FILE EXTERNAL
.foreach link oo_bld->typ=="ext" .and. oo_bld->SECTION=="0"
.M->cPath := if(!empty(toObject("objectpath")),toObject("objectpath")+[\],[])
ÛTgetCom("fi")+" "+cPath+alltrim(oo_obj->PRG)Û
.next

#  OGGETTI Visual dBSEE
.foreach link oo_bld->typ $ "drv-frm-brw-prn-qry" .and. oo_bld->SECTION=="0"
   .M->cTprg := AllTrim(oo_obj->PRG)
   .if Lower(cTini) != Lower(cTprg)
ÛTgetCom("fi")+" "+cTprgÛ
   .endif
.next

.inj LNK3 Prima delle librerie e del Beginarea in ROOT

#  LIBRERIE IN ROOT
.if toExeEnv("compiler")=="2"
Lib dBsee453
.endif
.if !(toExeEnv("compiler")=="3")
Lib dBsee4rb
.endif
.foreach link oo_bld->typ=="lib" .and. oo_bld->SECTION=="0"
.M->cPath := if(!empty(toObject("objectpath")),toObject("objectpath")+[\],[])
ÛTgetCom("Lib")+" "+cPath+alltrim(oo_obj->PRG)+"."+oo_obj->EXTÛ
.next

.if !(toExeEnv("compiler")=="3")
BEGINAREA
.endif

   .inj LNK4 All'interno BEGINAREA file script per BLINKER

   #  FILE SPECIALI
.foreach link oo_bld->typ=="spc" .and. oo_bld->wdo$"fun-udf-prg-rid" .and. oo_bld->SECTION $ "12345678"
   ÛTgetCom("fi")+" "+alltrim(oo_obj->PRG)Û
.next

   #  FILE EXTERNAL
.foreach link oo_bld->typ=="ext" .and. oo_bld->SECTION $ "12345678"
   .M->cPath := if(!empty(toObject("objectpath")),toObject("objectpath")+[\],[])
   .* Message exception
   .if !(toExeEnv("compiler")=="3" .and. UPPER(LEFT(alltrim(oo_obj->PRG),3))=="MSG")
   ÛTgetCom("fi")+" "+cPath+alltrim(oo_obj->PRG)Û
   .endif
.next

   #  OGGETTI Visual dBSEE
.foreach link oo_bld->typ $ "drv-frm-brw-prn-qry" .and. oo_bld->SECTION $ "12345678"
   .M->cTprg := AllTrim(oo_obj->PRG)
   .if Lower(cTini) != Lower(cTprg)
   ÛTgetCom("fi")+" "+cTprgÛ
   .endif
.next

   .if !(toExeEnv("compiler")=="3")
   MODULE Errorsys FROM dBsee4o
   .endif

   #  LIBRERIE ALLOCATE
   .inj LNK5 Posizione per librerie ALLOCATE prima della libreria Visual dBSEE
.foreach link oo_bld->typ=="lib" .and. oo_bld->SECTION $ "12345678"
   .M->cPath := if(!empty(toObject("objectpath")),toObject("objectpath")+[\],[])
   ÛTgetCom("Allocate")+" "+cPath+alltrim(oo_obj->PRG)+"."+oo_obj->EXTÛ
.next
   .if toExeEnv("compiler")=="3"
   lib dblang
   lib vdbsee1o
   lib vdbsee1s
   .else
   Allocate dBsee4o
   .endif
   .inj LNK6 Posizione per librerie ALLOCATE
   .if !(toExeEnv("compiler")=="3")
   Allocate Extend
   .endif

.if !(toExeEnv("compiler")=="3")
ENDAREA
.endif

.inj LNK8 Dopo ENDAREA ma prima del comando Lib Clipper

#  LIBRERIE
.if !(toExeEnv("compiler")=="3")
Lib Clipper
.do rddlib
.else
DEFBEGIN
   NAME ÛALLTRIM(oo_exe->ExeName)Û
   EXETYPE NT
   RC dBsee.res
DEFEND
.endif
.inj LNK9 Dopo il comando Lib Clipper
.foreach link oo_bld->typ=="lib" .and. oo_bld->SECTION=="9"
.M->cPath := if(!empty(toObject("objectpath")),toObject("objectpath")+[\],[])
ÛTgetCom("Lib")+" "+cPath+alltrim(oo_obj->PRG)+"."+oo_obj->EXTÛ
.next

.close
.dbusrOld()
